name: Pull Request

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run unit tests with coverage
        run: npm run test -- --code-coverage --browsers=ChromeHeadless --watch=false --reporters=progress,coverage
        env:
          CHROME_BIN: /usr/bin/google-chrome
          DISPLAY: ':99.0'
          
      - name: Archive coverage results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30
          
      - name: Display coverage summary
        if: always()
        run: |
          if [ -f coverage/10x-healthy-meal/index.html ]; then
            echo "Coverage report generated successfully"
            find coverage/ -name "*.txt" -exec cat {} \;
          else
            echo "Coverage report not found"
          fi

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build:ci
        env:
          NODE_ENV: production
          OPENROUTER_API_KEY: ${{ vars.OPENROUTER_API_KEY }}
          SUPABASE_URL: ${{ vars.SUPABASE_URL }}
          SUPABASE_KEY: ${{ vars.SUPABASE_KEY }}
          
      - name: Validate build output
        run: |
          echo "Validating build output..."
          if [ -d "dist/10x-healthy-meal" ]; then
            BUILD_DIR="dist/10x-healthy-meal"
          else
            BUILD_DIR="dist"
          fi
          
          if [ ! -d "$BUILD_DIR" ]; then
            echo "‚ùå Build directory not found!"
            exit 1
          fi
          
          echo "‚úÖ Build directory: $BUILD_DIR"
          echo "üì¶ Build size:"
          du -sh "$BUILD_DIR"
          echo "üìÅ Build contents:"
          ls -la "$BUILD_DIR" 